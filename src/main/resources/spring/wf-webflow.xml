<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:webflow="http://www.springframework.org/schema/webflow-config"
	xsi:schemaLocation="
           http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/webflow-config  http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd">

	<!-- Maps request paths to flows in the flowRegistry; e.g. a path of /hotels/booking looks for a flow 
		with id "hotels/booking" -->
	<bean class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping">
		<property name="flowRegistry" ref="flowRegistry" />
		<property name="defaultHandler">
			<bean class="org.springframework.web.servlet.mvc.UrlFilenameViewController" />
		</property>
	</bean>

	<bean class="org.springframework.webflow.mvc.servlet.FlowHandlerAdapter">
		<property name="flowExecutor" ref="flowExecutor" />
	</bean>

	<!-- Executes flows: the central entry point into the Spring Web Flow system -->
	<webflow:flow-executor id="flowExecutor">
		<webflow:flow-execution-listeners>
			<webflow:listener ref="hibernateFlowExecutionListener" />
			<webflow:listener ref="securityFlowExecutionListener" />
		</webflow:flow-execution-listeners>
	</webflow:flow-executor>

	<!-- The registry of executable flow definitions -->
	<webflow:flow-registry id="flowRegistry" flow-builder-services="flowBuilderServices" />
	
	<bean class="org.webframe.plugins.webflow.core.FlowDefinitionRegistryAid">
		<property name="flowRegistry" ref="flowRegistry" />
		<property name="flowBuilderServices" ref="flowBuilderServices" />
	</bean>

	<webflow:flow-builder-services id="flowBuilderServices" view-factory-creator="mvcViewFactoryCreator" />

	<bean id="mvcViewFactoryCreator" class="org.webframe.plugins.webflow.core.MvcViewFactoryCreatorAid" />

	<!-- Configures the Spring Web Flow JSF integration -->

	<!-- Installs a listener that manages Hibernate persistence contexts for flows that require them -->
	<bean id="hibernateFlowExecutionListener" class="org.springframework.webflow.persistence.HibernateFlowExecutionListener">
		<constructor-arg ref="sessionFactory" />
		<constructor-arg ref="transactionManager" />
	</bean>
	
	<bean id="securityFlowExecutionListener" class="org.webframe.plugins.webflow.core.SecurityFlowExecutionListenerProxy"/>
</beans>